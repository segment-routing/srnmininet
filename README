# Resources for SRN testing

## Create modified basebox

0. Setup a regular linux VM

1. install modified 4.13 linux kernel (Guest additions working + soon to be merged to 4.14 mainline)

	a. Get the master branch of the [netnext](https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git) repository.

	b. The following variables must be set at kernel compilation (in menuconfig => Networking support => Networking options => IPv6 protocol):
		- CONFIG_IPV6_SEG6_LWTUNNEL=y
		- CONFIG_IPV6_SEG6_HMAC=y

	c. Compile and install the kernel (e.g., follow these [instructions](https://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/)).

	d. Get the master branch of the [iproute2](https://git.kernel.org/pub/scm/linux/kernel/git/shemminger/iproute2.git) repository.
	
	e. See its README for installation instructions.

2. Or install modified 4.9 linux kernel (Guest additions not working)

	a. Apply in the same order the following patches on commit *ba6d973f78eb62ffebb32f6ef3334fc9a3b33d22* of the [netnext](https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git) repository.
		- patches/0001-ipv6-sr-add-action-mechanisms-to-hook-on-SR-processi.patch
		- patches/0002-ipv6-sr-add-timeouts-for-actions.patch

	b. The following variables must be set at kernel compilation (in menuconfig => Networking support => Networking options => IPv6 protocol):
		- CONFIG_IPV6_SEG6_LWTUNNEL=y
		- CONFIG_IPV6_SEG6_INLINE=y
		- CONFIG_IPV6_SEG6_HMAC=y

	c. Compile and install the kernel (e.g., follow these [instructions](https://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/)).

	d. Apply the patch *patches/sr6-iproute2.patch* on commit *f3f339e9590a50a0a75be88f6e32c227e8623b25* of the [iproute2](https://git.kernel.org/pub/scm/linux/kernel/git/shemminger/iproute2.git) repository.

	e. See its README for installation instructions.

3. Guest additions

	a. Install the newest version (5.1) of virtualbox as indicated [there](http://ubuntuhandbook.org/index.php/2016/07/virtualbox-5-1-released/).
		-> Use "sudo rcvboxdrv setup" to recompile kernel modules.

	b. Install Virtualbox guest additions from the newest [iso file](http://download.virtualbox.org/virtualbox/5.1.26/VBoxGuestAdditions_5.1.26.iso) (see [installation instructions](https://www.virtualbox.org/manual/ch04.html)).
		-> Don't forget to "sudo usermod -a -G vboxsf vagrant" (+ exit and reopen a new bash session before testing).

4. Setup virtual base box for vagrant

	a. Install the following packages (see [instructions](https://www.vagrantup.com/docs/boxes/base.html)).

	b. Follow [instructions](https://www.vagrantup.com/docs/virtualbox/boxes.html) to create the vagrant box with virtual box.

## Launch a test topology

TODO
